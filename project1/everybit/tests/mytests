# Copyright (c) 2012 MIT License by 6.172 Staff
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.


# Instructions for writing a test:
#
# t: initializes new test
# n: initializes bit array
# r: rotates bit array subset at offset, length by amount
# e: expects raw bit array value

# Ex:
# t 0
# 
# n 10010110
# r 0 8 -1
# e 00101101

# Place your 20 test cases below, here.

t 0     #Rotate array of all 0s

n 00000000
r 0 8 1
e 00000000

t 1     #Rotate array of all 1s

n 11111111
r 0 8 1
e 11111111

t 2     #rotate entire array right 

n 10010110
r 0 8 3
e 11010010

t 3     #rotate entire array left

n 10010110
r 0 8 -4
e 01101001

t 4     #rotate more than size of array

n 10010110
r 0 8 10
e 10100101

t 5     #rotate interior 

n 10010110
r 2 3 2
e 10100110

# 6: Simple right shift
t 6

n 10101010
r 0 8 1
e 01010101

# 7: Simple left shift
t 7

n 10101010
r 0 8 -1
e 01010101

# 8: Multi-bit right shift
t 8

n 11110000
r 0 8 3
e 00011110

# 9: Multi-bit left shift
t 9

n 11110000
r 0 8 -3
e 10000111

# 10: No shift
t 10

n 11001100
r 0 8 0
e 11001100

# 11: Shift with overlap (right)
t 11

n 10000011
r 1 6 2
e 10100001

# 12: Shift subset left
t 12

n 10111101
r 2 4 -1
e 10111101

# 13: Shift subset right
t 13

n 10111101
r 2 4 1
e 10111101

# 14: Full rotation right
t 14

n 01100110
r 0 8 8
e 01100110

# 15: Full rotation left
t 15

n 01100110
r 0 8 -8
e 01100110

# 16: Complex shift and rotate (right)
t 16

n 11011011
r 1 6 3
e 11011011

# 17: Rotation with overflow (right)
t 17

n 11111111
r 0 8 9
e 11111111

# 18: Rotate across boundaries (right)
t 18

n 01010101
r 3 5 2
e 01001101

# 19: Circular shift right
t 19

n 00111001
r 0 8 4
e 10010011

# 20: Circular shift left
t 20

n 00111001
r 0 8 -4
e 10010011

# 21: Alternate bits right shift
t 21

n 01010101
r 0 8 2
e 01010101

# 22: Alternate bits left shift
t 22

n 10101010
r 0 8 -2
e 10101010

# 23: Rotate larger segment (right)
t 23

n 11100011
r 2 6 4
e 11001110

# 24: Random pattern shift right
t 24

n 10100101
r 1 7 3
e 11010100
